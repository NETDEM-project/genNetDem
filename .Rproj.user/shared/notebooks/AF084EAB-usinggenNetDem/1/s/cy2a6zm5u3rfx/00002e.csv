"0",""
"0","#inspect which individuals are alive at timestep 4."
"0","inds_alive[[4]]"
"1"," [1]"
"1","   1"
"1","   2"
"1","   4"
"1","   5"
"1","   6"
"1","   8"
"1","  10"
"1","  11"
"1","  12"
"1","  14"
"1","  15"
"1","  17"
"1","  18"
"1","  19"
"1","  20"
"1","  23"
"1","  25"
"1","  26"
"1","  27"
"1","  28"
"1","  30"
"1","  31"
"1","  32"
"1","  33"
"1","  34"
"1","  35"
"1","  36"
"1","  37"
"1","  38"
"1","  39"
"1","  41"
"1","  43"
"1","  45"
"1","  46"
"1","  47"
"1","
"
"1","[36]"
"1","  48"
"1","  49"
"1","  51"
"1","  52"
"1","  54"
"1","  56"
"1","  58"
"1","  62"
"1","  64"
"1","  66"
"1","  67"
"1","  68"
"1","  70"
"1","  71"
"1","  74"
"1","  75"
"1","  76"
"1","  77"
"1","  79"
"1","  80"
"1","  81"
"1","  83"
"1","  84"
"1","  86"
"1","  87"
"1","  89"
"1","  90"
"1","  91"
"1","  92"
"1","  93"
"1","  96"
"1","  98"
"1","  99"
"1"," 101"
"1"," 102"
"1","
"
"1","[71]"
"1"," 103"
"1"," 104"
"1"," 107"
"1"," 109"
"1"," 110"
"1"," 111"
"1"," 112"
"1"," 113"
"1"," 114"
"1"," 115"
"1"," 116"
"1"," 117"
"1"," 118"
"1"," 119"
"1","
"
"0","#generate conventional capture-recapture dataset"
"0","capture_data<-cap_dat_gen(CG=OG,SW_store=SW_store,full_indiv_data=full_indiv_data,inds_alive=inds_alive,bs=beh_steps)"
"0",""
"0","#Reminder of capture/observation steps and then vector of which timesteps were sampled."
"0","start_obs=1"
"0","end_obs=max(samp_wind)"
"0","interval_obs=2"
"0","start_cap=1"
"0","end_cap=4"
"0","interval_cap=1"
"0","which_keep<-unique(sort(c(seq(start_obs,end_obs,interval_obs),seq(start_cap,end_cap,interval_cap))))"
"0","keep_winds<-rep(0,beh_steps)"
"0","keep_winds[which_keep]<-1"
"0","#Add a 1 at the start to keep the IDs"
"0","keep_winds2<-c(1,rep(keep_winds,dem_steps))"
"0",""
"0","#Remove capture data for all behavioural timesteps where captures were not attempted"
"0","att_caps<-capture_data[[2]]"
"0","att_caps<-att_caps[,keep_winds2==1]"
"0",""
"0","#Show behavioural timestep capture data"
"0","print(att_caps[1:5,1:25])"
